import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode
from aiogram.utils import executor
from aiogram.dispatcher.filters import Command

API_TOKEN = "8035146676:AAHGG1HL8rGET5SKXt1Q1GhaN-N0JJpdGsk"
ADMIN_ID = 1150616818

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    await message.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler()
async def forward_to_admin(message: types.Message):
    if str(message.from_user.id) != str(ADMIN_ID):
        msg = f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or '–±–µ–∑ –∏–º–µ–Ω–∏'} (ID: {message.from_user.id}):

{message.text}"
        await bot.send_message(ADMIN_ID, msg)

# –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞
@dp.message_handler(Command("reply"))
async def reply_user(message: types.Message):
    if str(message.from_user.id) == str(ADMIN_ID):
        try:
            parts = message.text.split(" ", 2)
            user_id = int(parts[1])
            reply_text = parts[2]
            await bot.send_message(user_id, f"üí¨ –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
{reply_text}")
            await message.reply("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        except Exception as e:
            await message.reply(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)